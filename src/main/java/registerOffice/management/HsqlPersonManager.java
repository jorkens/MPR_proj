package registerOffice.management;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import registerOffice.businessObjects.clients.Driver;

public class HsqlPersonManager 
	implements ManagerInterface<Driver>
{
	
	Connection connection;
	private String url="jdbc:hsqldb:hsql://localhost/workdb";
	
	String createTable = "CREATE TABLE Drivers(" +
			"id bigint GENERATED BY DEFAULT AS IDENTITY," +
			"name VARCHAR(20)," +
			"pesel VARCHAR(20))";
	
	Statement stmt;
	PreparedStatement saveDriver;
	PreparedStatement getAll;
	PreparedStatement deleteDriver;
	PreparedStatement getDriver;
	public HsqlPersonManager()
	{
		try {
			connection=DriverManager.getConnection(url);
			stmt = connection.createStatement();
			
			//utworzenie tabeli
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			
			while(rs.next())
			{
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("Driver"))
				{
					tableExists=true;
					break;
				}
			}
			if(!tableExists)
			{
				stmt.executeUpdate(createTable);
			}
			
			//zapytania na bazie
			getAll=connection.prepareStatement("" +
					"Select * From Drivers");
			deleteDriver=connection.prepareStatement("" +
					"DELETE From Drivers where name=?");
			getDriver = connection.prepareStatement("" +
					"SELECT * FROM Drivers WHERE id=?");
			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
	}
	
	@Override
	public Driver get(int id) {
		Driver result=null;
		try {
			getDriver.setInt(1, id);
			ResultSet rs = getDriver.executeQuery();
			while(rs.next()){
				result = new Driver(rs.getString("name"),rs.getString("pesel"));
				break;
			}
			return result;
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public List<Driver> getAll() {
		
		List<Driver> result = new ArrayList<Driver>();
		
		try {
			ResultSet rs= getAll.executeQuery();
			while(rs.next())
				result.add(new Driver(rs.getString("Name"),rs.getString("Pesel")));
			
			return result;
			
		} catch (SQLException e) {
			e.printStackTrace();
			return null;
		}
		
	}

	@Override
	public boolean save(Driver obj) {
		try {
			saveDriver = connection.prepareStatement("" +
					"INSERT INTO Persons(name,pesel)" +
					"VALUES(?,?)");
			saveDriver.setString(1, obj.getName());
			saveDriver.setString(2, obj.getPesel());
			
			return saveDriver.execute();
		} 
		catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
		
	}

	@Override
	public boolean delete(Driver obj) {
		try {
			deleteDriver.setString(1, obj.getName());
			deleteDriver.executeUpdate();
			return true;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		
	}

}
